{
    "swagger": "2.0",
    "info": {
        "description": "API for personalized city discovery and recommendations.",
        "title": "WanderWiseAI API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000 // Adjust to your actual host/port",
    "basePath": "/api/v1        // Base path for all API routes",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns JWT access and refresh tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Login",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "401": {
                        "description": "Authentication Failed",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Invalidates the user's current session/refresh token. Typically uses Refresh Token from HttpOnly cookie. Body might be empty or contain refresh token if not using cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "parameters": [
                    {
                        "description": "Logout Request (only needed if sending refresh_token in body)",
                        "name": "token",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/auth.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout Successful",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., malformed body if used)",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    }
                }
            }
        },
        "/auth/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows an authenticated user to change their own password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Change User Password",
                "parameters": [
                    {
                        "description": "Old and New Passwords",
                        "name": "passwords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (Invalid old password or bad token)",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Provides a new access token using a valid refresh token (typically sent via HttpOnly cookie). Body might be empty or contain refresh token if not using cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Access Token",
                "parameters": [
                    {
                        "description": "Refresh Token Request (only needed if sending refresh_token in body)",
                        "name": "token",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New Access Token (Refresh Token set in cookie)",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., missing token)",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "401": {
                        "description": "Invalid or Expired Refresh Token",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Creates a new user account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register New User",
                "parameters": [
                    {
                        "description": "User Registration Details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User Registered Successfully",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "409": {
                        "description": "Email or Username already exists",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "description": "User's desired new password.",
                    "type": "string",
                    "minLength": 8,
                    "example": "NewStr0ngP@ss!"
                },
                "old_password": {
                    "description": "User's current password.",
                    "type": "string",
                    "example": "currentPassword123"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "User's email address for login.",
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "description": "User's password.",
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Short-lived JWT access token.",
                    "type": "string",
                    "example": "eyJhbGciOiJI..."
                },
                "message": {
                    "description": "Confirmation message.",
                    "type": "string",
                    "example": "Login successful"
                },
                "refresh_token": {
                    "description": "Longer-lived refresh token (often set in HttpOnly cookie instead).",
                    "type": "string",
                    "example": "4f1trt8s..."
                }
            }
        },
        "auth.LogoutRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "description": "Refresh token to invalidate.",
                    "type": "string"
                }
            }
        },
        "auth.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "description": "The refresh token obtained during login.",
                    "type": "string",
                    "example": "4f1trt8s..."
                }
            }
        },
        "auth.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "description": "User's email address. Must be unique.",
                    "type": "string",
                    "example": "newuser@example.com"
                },
                "password": {
                    "description": "User's desired password (min length 8).",
                    "type": "string",
                    "minLength": 8,
                    "example": "Str0ngP@ss!"
                },
                "role": {
                    "description": "Optional role assignment (defaults server-side if empty).",
                    "type": "string",
                    "example": "user"
                },
                "username": {
                    "description": "Desired username. Must be unique.",
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "auth.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Optional error message.",
                    "type": "string",
                    "example": "Resource not found"
                },
                "message": {
                    "description": "Optional success message.",
                    "type": "string",
                    "example": "Operation successful"
                },
                "success": {
                    "description": "Indicates if the operation was successful.",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "auth.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "The new short-lived JWT access token.",
                    "type": "string",
                    "example": "eyJhbGciOiJI..."
                },
                "refresh_token": {
                    "description": "The *new* longer-lived refresh token (if rotation is enabled, often set in cookie).",
                    "type": "string",
                    "example": "9a8b7c..."
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}