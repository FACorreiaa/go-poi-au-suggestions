apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: loci-server-project
  namespace: argocd
  labels:
    app.kubernetes.io/name: loci-server-project
    app.kubernetes.io/part-of: loci-server-platform
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: Project for Go AI POI application and its observability stack
  
  # Source repositories
  sourceRepos:
    - 'https://github.com/your-org/loci-server.git'  # Update with your repo URL
    - 'https://charts.bitnami.com/bitnami'
    - 'https://prometheus-community.github.io/helm-charts'
    - 'https://grafana.github.io/helm-charts'
  
  # Destination clusters and namespaces
  destinations:
    - namespace: 'loci-server'
      server: https://kubernetes.default.svc
    - namespace: 'observability'
      server: https://kubernetes.default.svc
    - namespace: 'argocd'
      server: https://kubernetes.default.svc
  
  # Cluster resource allow list
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRole
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRoleBinding
    - group: 'networking.k8s.io'
      kind: IngressClass
    - group: 'apiextensions.k8s.io'
      kind: CustomResourceDefinition
  
  # Namespace resource allow list
  namespaceResourceWhitelist:
    - group: ''
      kind: ConfigMap
    - group: ''
      kind: Secret
    - group: ''
      kind: Service
    - group: ''
      kind: ServiceAccount
    - group: ''
      kind: PersistentVolumeClaim
    - group: 'apps'
      kind: Deployment
    - group: 'apps'
      kind: StatefulSet
    - group: 'apps'
      kind: DaemonSet
    - group: 'networking.k8s.io'
      kind: Ingress
    - group: 'autoscaling'
      kind: HorizontalPodAutoscaler
    - group: 'policy'
      kind: PodDisruptionBudget
    - group: 'rbac.authorization.k8s.io'
      kind: Role
    - group: 'rbac.authorization.k8s.io'
      kind: RoleBinding
  
  roles:
    # Admin role - full access
    - name: admin
      description: Admin access to loci-server project
      policies:
        - p, proj:loci-server-project:admin, applications, *, loci-server-project/*, allow
        - p, proj:loci-server-project:admin, logs, get, loci-server-project/*, allow
        - p, proj:loci-server-project:admin, exec, create, loci-server-project/*, allow
      groups:
        - loci-server:admin
    
    # Developer role - limited access
    - name: developer
      description: Developer access to loci-server project
      policies:
        - p, proj:loci-server-project:developer, applications, get, loci-server-project/*, allow
        - p, proj:loci-server-project:developer, applications, sync, loci-server-project/*, allow
        - p, proj:loci-server-project:developer, logs, get, loci-server-project/*, allow
      groups:
        - loci-server:developer
    
    # Read-only role
    - name: readonly
      description: Read-only access to loci-server project
      policies:
        - p, proj:loci-server-project:readonly, applications, get, loci-server-project/*, allow
        - p, proj:loci-server-project:readonly, logs, get, loci-server-project/*, allow
      groups:
        - loci-server:readonly